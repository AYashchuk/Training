1)
Один поток генерирует числа

public void produce()

второй выводит на экран

public void consume()

используя промежуточное хранилище.

public void put(int value)
public int get()

Классы задания:

hw4.threads.Producer
hw4.threads.Consumer
hw4.threads.Holder

Класс теста:
hw4.threads.ProducerConsumerTest
2)
Реализовать в классе MyArrayList метод
public int parallelIndexOf(E e), выполняющий линейный многопоточный поиск в списке.
Использовать механизм wait()/notify() для координации потоков.
В тестах проверить поиск:
- существующего элемента
- не существующего элемента
- не существующего элемента в пустом массиве
- не существующего элемента в массиве с одним элементом
- существующего элемента в массиве с одним элементом
- элемента со значением null

Класс задания:
hw4.parallel.MyArrayList

Класс теста:
hw4.parallel.MyArrayListTest
3)
Написать чат сервер. При подключении, пользователь передает на сервер свое имя и получает список всех подключенных к
серверу пользователей. Каждый участник может начать чат с любым участником, кроме себя. Реализовать передачу файлов.
Метод:
public void listenConnections()

Класс задания:
hw4.parallel.ChatServer

Класс теста:
hw4.parallel.ChatServerTest
4)
Написать приложения для многопоточного вычисления суммы элементов ряда. Число пользователь вводит с клавиатуры. Например для 3 это 1+2+3=6.

Класс задания:
hw4.parallel.SequenceSummator

Класс теста:
hw4.parallel.SequenceSummatorTest